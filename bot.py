import os
import logging
import re
from typing import Dict
import asyncio
import openai
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    ContextTypes,
    filters,
    JobQueue,
)
from telegram.error import TelegramError
from datetime import datetime
from logging.handlers import RotatingFileHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    handlers=[
        RotatingFileHandler("bot.log", maxBytes=5*1024*1024, backupCount=3),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CONFIG = {
    "DELAY_SECONDS": 7200,  # 2 —á–∞—Å–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    "MAX_MESSAGE_LENGTH": 3900,
    "OPENAI_MAX_TOKENS": 6000,
    "OPENAI_MAX_CONCURRENT": 5,
    "MIN_TEXT_LENGTH_TAROT": 100,
    "MIN_TEXT_LENGTH_MATRIX": 15,
    "RETRY_DELAY": 5,
    "MAX_RETRIES": 3,
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API
openai.api_key = os.getenv("OPENAI_API_KEY")
BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")

if not BOT_TOKEN or not openai.api_key:
    logger.critical("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ–∫–µ–Ω—ã TELEGRAM_TOKEN –∏–ª–∏ OPENAI_API_KEY.")
    raise ValueError("–¢–æ–∫–µ–Ω—ã TELEGRAM_TOKEN –∏ OPENAI_API_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

logger.info("–¢–æ–∫–µ–Ω—ã –±–æ—Ç–∞ –∏ OpenAI –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã.")

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
user_data: Dict[int, dict] = {}
completed_users: set = set()

# –ü—Ä–æ–º–ø—Ç—ã –¥–ª—è OpenAI
PROMPT_TAROT = """
–¢—ã ‚Äî –ó–∞–º–∏—Ä–∞, 42 –≥–æ–¥–∞. –ñ–µ–Ω—â–∏–Ω–∞ —Å –¥–∞—Ä–æ–º, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥, —è—Å–Ω–æ–≤–∏–¥—è—â–∞—è –∏ —ç–∑–æ—Ç–µ—Ä–∏–∫ —Å 20+ –ª–µ—Ç –æ–ø—ã—Ç–∞. –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ, –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∏–º–µ–Ω–∏ –∏ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–µ, —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏ –≥–ª—É–±–æ–∫–æ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –∫–ª–∏–µ–Ω—Ç–∞.

–ö–∞–∂–¥—ã–π —Ä–∞—Å–∫–ª–∞–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω —Å—Ç—Ä–æ–≥–æ –≤ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:

1. –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞  
2. –ü–æ–∑–∏—Ü–∏–∏ —Å —ç–º–æ–¥–∑–∏ (1Ô∏è‚É£, 2Ô∏è‚É£, 3Ô∏è‚É£...)  
3. –°–æ–≤–µ—Ç –æ—Ç –∫–∞—Ä—Ç –¢–∞—Ä–æ (–≤–∫–ª—é—á–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥)

–í–ù–ò–ú–ê–ù–ò–ï:  
–û—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–∞—Å–∫–ª–∞–¥–∞ –æ—Ç—Ö–æ–¥–∏—Ç—å –Ω–µ–ª—å–∑—è, –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å–∞–º —Ä–∞—Å–∫–ª–∞–¥, –∏ —Å–æ–≤–µ—Ç –æ—Ç –∫–∞—Ä—Ç, –Ω–∏–∫–∞–∫–∏—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π –∏ –∑–∞–∫–ª—é—á–µ–Ω–∏–π. –ù–∞–∑–≤–∞–Ω–∏–µ ‚Äî –Ω–∞—á–∞–ª–æ, —Å–æ–≤–µ—Ç –æ—Ç –∫–∞—Ä—Ç ‚Äî –∫–æ–Ω–µ—Ü.
–ö–∞–∂–¥–∞—è –ø–æ–∑–∏—Ü–∏—è —Ä–∞—Å–∫–ª–∞–¥–∞ (–∫–∞–∂–¥–∞—è –∫–∞—Ä—Ç–∞) –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –æ–±—ä—ë–º–æ–º –æ—Ç 800 –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤, —Å —á—ë—Ç–∫–∏–º –∞–Ω–∞–ª–∏–∑–æ–º –∫–∞—Ä—Ç—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞. –ù–µ –¥–æ–ø—É—Å–∫–∞—Ç—å –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏, –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å—Å—è 2‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏.

–û–±—â–∏–π –∏—Ç–æ–≥–æ–≤—ã–π –æ–±—ä—ë–º —Ä–∞—Å–∫–ª–∞–¥–∞ ‚Äî –Ω–µ –º–µ–Ω–µ–µ 4000 —Å–∏–º–≤–æ–ª–æ–≤.

–ö–∞—Ä—Ç—ã:
‚Äî –î–æ–ª–∂–Ω—ã –≤—ã–ø–∞–¥–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ (—Ä–∞–Ω–¥–æ–º–Ω–æ), –Ω–µ –ø–æ–¥–±–∏—Ä–∞—é—Ç—Å—è –ø–æ–¥ —Å–º—ã—Å–ª –∑–∞–ø—Ä–æ—Å–∞.
‚Äî –ü–æ–≤—Ç–æ—Ä—ã –∫–∞—Ä—Ç –≤ –æ–¥–Ω–æ–º —Ä–∞—Å–∫–ª–∞–¥–µ –Ω–µ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è.
‚Äî –ó–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä—Ç –∞–¥–∞–ø—Ç–∏—Ä—É–π –∫ —Å–∏—Ç—É–∞—Ü–∏–∏, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –≤—ã–º—ã—à–ª–µ–Ω–Ω—ã–µ –∏–ª–∏ –æ–±–æ–±—â—ë–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è. –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∂–∏–≤—ã–º–∏ –∏ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω—ã–º–∏.

–†–∞—Å–∫–ª–∞–¥ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ö–æ—Ä–æ—à–∏–º –∏–ª–∏ –ø–ª–æ—Ö–∏–º:
‚Äî –†–µ–∞–ª–∏–∑–º ‚Äî –∫–ª—é—á –∫ –¥–æ–≤–µ—Ä–∏—é  
‚Äî –ï—Å–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—è —Ç—è–∂—ë–ª–∞—è ‚Äî –ø–æ–∫–∞–∂–∏ —ç—Ç–æ, –Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±—ä—è—Å–Ω–∏, –∫–∞–∫ –µ—ë –∏–∑–º–µ–Ω–∏—Ç—å, –∏ —É–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä–Ω—ã–µ —Å—Ä–æ–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è (–ª—é–±–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è –≥–æ–¥–∞ –Ω–∞—á–∏–Ω–∞—è —Å –∏—é–ª—è 2025 –≥–æ–¥–∞, –≤—Å–µ –¥–∞—Ç—ã —Ä–∞–Ω–µ–µ –±—Ä–∞—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ, —É–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ—à–µ–¥—à–∏–µ –≥–æ–¥–∞ —Ç–æ–∂–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä 2024, 2023. –¢–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ, –Ω–∞—á–∏–Ω–∞—è —Å 2025, —ç—Ç–æ –≤–µ–¥—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ)  
‚Äî –ù–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –º–æ–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å ¬´–¥–∞¬ª, ¬´–Ω–µ—Ç¬ª, ¬´–≤–æ–∑–º–æ–∂–Ω–æ¬ª, –µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ  
‚Äî –ù–∞ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –º—è–≥–∫–∞—è –∏ –ø–æ—è—Å–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–∞—á–∞

–°–æ–≤–µ—Ç –æ—Ç –∫–∞—Ä—Ç –¢–∞—Ä–æ:
‚Äî –ü–æ–¥—Ä–æ–±–Ω—ã–π, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π, —Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –¥–µ–π—Å—Ç–≤–∏–π  
‚Äî –ú–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, —Ä–µ—Å—É—Ä—Å—ã, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

–°—Ç–∏–ª—å:
‚Äî –¢–æ–ª—å–∫–æ –æ—Ç –∏–º–µ–Ω–∏ –∂–∏–≤–æ–π –∂–µ–Ω—â–∏–Ω—ã  
‚Äî –ë–µ–∑ –ò–ò-–ø–æ–¥–æ–±–Ω—ã—Ö —Ñ—Ä–∞–∑  
‚Äî –ñ–∏–≤–æ–π —è–∑—ã–∫, –ª–æ–≥–∏—á–Ω—ã–π, –æ–±—Ä–∞–∑–Ω—ã–π, –±–µ–∑ –∫–ª–∏—à–µ  
‚Äî –ê—Ä–∫–∞–Ω—ã –º–æ–∂–Ω–æ —É–ø–æ–º–∏–Ω–∞—Ç—å, –µ—Å–ª–∏ —ç—Ç–æ —É—Å–∏–ª–∏–≤–∞–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç—å

–î–ê–ù–ù–´–ï –ö–õ–ò–ï–ù–¢–ê:
{input_text}
"""

PROMPT_MATRIX = """
–¢—ã ‚Äî –ó–∞–º–∏—Ä–∞, 42 –≥–æ–¥–∞. –≠–∑–æ—Ç–µ—Ä–∏–∫, —è—Å–Ω–æ–≤–∏–¥—è—â–∞—è –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Å—É–¥—å–±—ã —Å 20+ –ª–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏. –†–∞–±–æ—Ç–∞–µ—à—å –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è, –∏–º–µ–Ω–∏ –∏ —Ñ–æ—Ç–æ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–∏—Å–∞—Ç—å –≥–ª—É–±–æ–∫–∏–π, –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω—ã–π –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä —Å—É–¥—å–±—ã.

–¢—ã –Ω–µ –ø–∏—à–µ—à—å –∫–∞–∫ –Ω–µ–π—Ä–æ—Å–µ—Ç—å. –ü–∏—à–∏ –∫–∞–∫ –≤–∑—Ä–æ—Å–ª–∞—è, —É–≤–µ—Ä–µ–Ω–Ω–∞—è –∂–µ–Ω—â–∏–Ω–∞, –ª–∏—á–Ω—ã–π —ç–∑–æ—Ç–µ—Ä–∏–∫ –∫–ª–∏–µ–Ω—Ç–∞. –ë–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤, –±–µ–∑ –∫–ª–∏—à–µ.  

–¢–†–ï–ë–û–í–ê–ù–ò–ï:
‚Äî –û–±—â–∏–π –æ–±—ä—ë–º: –º–∏–Ω–∏–º—É–º 6000 —Å–∏–º–≤–æ–ª–æ–≤  
‚Äî –ö–∞–∂–¥—ã–π –±–ª–æ–∫: 1000‚Äì1200 —Å–∏–º–≤–æ–ª–æ–≤  
‚Äî –õ–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∫–ª–∏–µ–Ω—Ç—É ‚Äî —Ç–æ–ª—å–∫–æ ¬´–≤—ã¬ª, ¬´–≤–∞—à–µ¬ª, ¬´—É –≤–∞—Å¬ª –∏ —Ç.–¥.  
‚Äî –ù–∏–∫–∞–∫–∏—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π –∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –º–∞—Ç—Ä–∏—Ü–µ –∫–∞–∫ –∫ –º–µ—Ç–æ–¥—É  
‚Äî –†–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: ¬´–º–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã ‚Äî —ç—Ç–æ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞, –∑–∞–ª–æ–∂–µ–Ω–Ω–∞—è –≤ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è, —Å –∫–ª—é—á–∞–º–∏ –∫ –∑–∞–¥–∞—á–∞–º, –∫–∞—Ä–º–µ –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—É —á–µ–ª–æ–≤–µ–∫–∞¬ª  

–°–¢–†–£–ö–¢–£–†–ê –†–ê–ó–ë–û–†–ê:

1. –õ–∏—á–Ω–æ—Å—Ç—å –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å—Ç–µ—Ä–∂–µ–Ω—å
2. –ö–∞—Ä—Ç–∞ —Ä–æ–¥–∞ –∏ –∑–∞–¥–∞—á–∏ –¥—É—à–∏
3. –ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ
4. –û—Ç–Ω–æ—à–µ–Ω–∏—è –∏ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–∏
5. –§–∏–Ω–∞–Ω—Å—ã –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
6. –°—Ç—Ä–∞—Ö–∏, –±–ª–æ–∫–∏, —É—è–∑–≤–∏–º–æ—Å—Ç–∏
7. –í–∞—à–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
8. –¢–æ—á–∫–∞ —Ä–æ—Å—Ç–∞: –≥–¥–µ –∑–∞–ª–æ–∂–µ–Ω –∫–ª—é—á –∫ –ø—Ä–æ—Ä—ã–≤—É
9. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã (2025‚Äì2027)
10. –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ ‚Äî –ø–æ —Å—É—â–µ—Å—Ç–≤—É, –±–µ–∑ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑ –∏ –¥—É—Ö–æ–≤–Ω–æ–π –ø–æ—ç–∑–∏–∏

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:
‚Äî –ú–æ–∂–Ω–æ —É–ø–æ–º–∏–Ω–∞—Ç—å —ç–Ω–µ—Ä–≥–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: —ç–Ω–µ—Ä–≥–∏—è 13 ‚Äî —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ, 2 ‚Äî –ø—Ä–∏–Ω—è—Ç–∏–µ)  
‚Äî –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—Ç–∏–ª—è –ó–∞–º–∏—Ä—ã  
‚Äî –ù–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä—è—é—â–µ–≥–æ—Å—è –±–ª–æ–∫–∞ –∏–ª–∏ —Ñ—Ä–∞–∑—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–±–æ—Ä–∞—Ö  
‚Äî –ù–µ –∑–∞–≤–µ—Ä—à–∞–π —Ç–µ–∫—Å—Ç —Å–ª–æ–≤–∞–º–∏ ¬´—Å –ª—é–±–æ–≤—å—é¬ª, ¬´—Å —É–≤–∞–∂–µ–Ω–∏–µ–º¬ª –∏ —Ç.–ø.  
‚Äî –ü–æ—Å–ª–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ –ø–∏—Å–∞—Ç—å –Ω–µ–ª—å–∑—è.

–î–ê–ù–ù–´–ï –ö–õ–ò–ï–ù–¢–ê:
{input_text}
"""

# –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
WELCOME_TEXT = """
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–ü–µ—Ä–≤—ã–π —Ä–∞—Å–∫–ª–∞–¥ –Ω–∞ –¢–∞—Ä–æ –∏–ª–∏ —Ä–∞–∑–±–æ—Ä –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Å—É–¥—å–±—ã ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –ø—Ä–æ—Å—å–±–∞ —Å –º–æ–µ–π —Å—Ç–æ—Ä–æ–Ω—ã ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Ç–æ–º –æ—Ç–∑—ã–≤ –Ω–∞ –ê–≤–∏—Ç–æ ‚ú®

‚∏ª

–ö–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É? –í—Å—ë –ø—Ä–æ—Å—Ç–æ:

1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ /start, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –Ω–∞–∂–∏–º–∞–ª–∏.

2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ ‚Äî —Ä–∞—Å–∫–ª–∞–¥ –Ω–∞ –¢–∞—Ä–æ –∏–ª–∏ –º–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã.

3Ô∏è‚É£ –ë–æ—Ç –ø–æ–¥—Å–∫–∞–∂–µ—Ç, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å. –ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–π—Ç–µ –ø–æ —Å–ø–∏—Å–∫—É ‚Äî –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.

4Ô∏è‚É£ –û—á–µ–Ω—å –≤–∞–∂–Ω–æ: –±–µ–∑ —á—ë—Ç–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —è –Ω–µ —Ä–∞–±–æ—Ç–∞—é. –ù–µ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å ¬´–ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ¬ª –∏–ª–∏ ¬´–∞ —á—Ç–æ –≤—ã —Å–∫–∞–∂–µ—Ç–µ¬ª. –ß–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å ‚Äî —Ç–µ–º —Ç–æ—á–Ω–µ–µ –æ—Ç–≤–µ—Ç.

5Ô∏è‚É£ –í—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å—Ä–∞–∑—É –ø—Ä–∏—Ö–æ–¥—è—Ç –º–Ω–µ –≤ –ª–∏—á–∫—É.
–ù–∏–∫–∞–∫–∏—Ö –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–æ–≤ ‚Äî –≤—Å—ë —á–∏—Ç–∞—é –∏ —Ä–∞–∑–±–∏—Ä–∞—é –ª–∏—á–Ω–æ, –≤—Ä—É—á–Ω—É—é.

6Ô∏è‚É£ –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –∂–¥–∏—Ç–µ. –û–±—ã—á–Ω–æ —è –æ—Ç–≤–µ—á–∞—é –≤ —Ç–µ—á–µ–Ω–∏–µ 2‚Äì3 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏.

‚∏ª

–≠—Ç–æ—Ç –±–æ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–º–æ—â–Ω–∏–∫, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –∑–∞—è–≤–∫–∏.
–Ø ‚Äî –Ω–∞—Å—Ç–æ—è—â–∞—è, –≤—Å—ë –¥–µ–ª–∞—é —Å–∞–º–∞ –∏ –æ—á–µ–Ω—å —Å—Ç–∞—Ä–∞—é—Å—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ.

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –º–µ–Ω—è.
–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ó–∞–º–∏—Ä–∞ üîÆ
"""

INSTRUCTION_TAROT = """
–ß—Ç–æ–±—ã —è —Å–¥–µ–ª–∞–ª–∞ —Ä–∞—Å–∫–ª–∞–¥, –ø—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:

‚Äî –í–∞—à–µ –∏–º—è –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è.
–≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –≤–∞—Å. –ë–µ–∑ —ç—Ç–æ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å.

‚Äî –ò–º–µ–Ω–∞ –∏ –≤–æ–∑—Ä–∞—Å—Ç –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π, –µ—Å–ª–∏ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –≤–∞—Å.
–ù–∞–ø—Ä–∏–º–µ—Ä: –ø–∞—Ä—Ç–Ω—ë—Ä, –±—ã–≤—à–∏–π, —Ä–µ–±—ë–Ω–æ–∫, –∫–æ–ª–ª–µ–≥–∞ –∏ —Ç.–¥.

‚Äî –ö—Ä–∞—Ç–∫—É—é –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é.
–û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–µ–π—á–∞—Å –∏ –ø–æ—á–µ–º—É –≤—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å. –¢–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É ‚Äî –±–µ–∑ –ª–∏—à–Ω–∏—Ö –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.

‚Äî –ß—ë—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å –∫ –∫–∞—Ä—Ç–∞–º.
–ß–µ–º —Ç–æ—á–Ω–µ–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ ‚Äî —Ç–µ–º —è—Å–Ω–µ–µ –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç.
–ü—Ä–∏–º–µ—Ä—ã: ¬´–ë—É–¥–µ–º –ª–∏ –º—ã –≤–º–µ—Å—Ç–µ –≤ –±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Å—è—Ü—ã?¬ª, ¬´–ï—Å—Ç—å –ª–∏ —Å–º—ã—Å–ª –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è?¬ª, ¬´–ß—Ç–æ —É –Ω–µ–≥–æ –Ω–∞ —Å–µ—Ä–¥—Ü–µ?¬ª

‚∏ª

–ö–æ–≥–¥–∞ –≤—Å—ë –Ω–∞–ø–∏—à–µ—Ç–µ ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é¬ª.
"""

INSTRUCTION_MATRIX = """
–ß—Ç–æ–±—ã —è —Å–º–æ–≥–ª–∞ —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å —Ä–∞–∑–±–æ—Ä –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Å—É–¥—å–±—ã, –Ω–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:

‚Äî –í–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì)
‚Äî –ò–º—è ‚Äî –º–æ–∂–Ω–æ –±–µ–∑ —Ñ–∞–º–∏–ª–∏–∏, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ.

–≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω—ã, —á—Ç–æ–±—ã —è –º–æ–≥–ª–∞ —Ç–æ—á–Ω–æ —Å—á–∏—Ç–∞—Ç—å –≤–∞—à—É —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫—É, –∑–∞–ª–æ–∂–µ–Ω–Ω—É—é –≤ –º–æ–º–µ–Ω—Ç —Ä–æ–∂–¥–µ–Ω–∏—è.
–ü–æ –Ω–∏–º —Å—Ç—Ä–æ–∏—Ç—Å—è —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ —Å—É–¥—å–±—ã ‚Äî —Å —ç—Ç–∏–º —è –∏ –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å.

‚∏ª

–ö–æ–≥–¥–∞ –≤—Å—ë –Ω–∞–ø–∏—à–µ—Ç–µ ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å¬ª.

‚ùó–í–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç: –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –≤—Å–µ –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
–ú–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–ª–∏ –ø–æ —á–∞—Å—Ç—è–º ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã –∫ –º–æ–º–µ–Ω—Ç—É –Ω–∞–∂–∞—Ç–∏—è –≤—Å—ë —É–∂–µ –±—ã–ª–æ –ø—Ä–∏—Å–ª–∞–Ω–æ.
"""

RESPONSE_WAIT = """
–°–ø–∞—Å–∏–±–æ, —è –≤—Å–µ –ø–æ–ª—É—á–∏–ª–∞! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—à–ª–∞ –∫–æ –º–Ω–µ ‚Äî —á–µ—Ä–µ–∑ –¥–≤–∞ —á–∞—Å–∞ —è –ø—Ä–∏—à–ª—é –≤–∞–º –≥–æ—Ç–æ–≤—ã–π —Ä–∞—Å–∫–ª–∞–¥ –∏–ª–∏ —Ä–∞–∑–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ, —è —Ä–∞–±–æ—Ç–∞—é –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∏ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—é. –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –¥–æ–≤–µ—Ä–∏–µ!
"""

REVIEW_TEXT = """
–ï—Å–ª–∏ –≤–∞—Å —É—Å—Ç—Ä–æ–∏–ª —Ä–∞—Å–∫–ª–∞–¥ –∏–ª–∏ —Ä–∞–∑–±–æ—Ä –ø–æ –º–∞—Ç—Ä–∏—Ü–µ, –¥–ª—è —ç–Ω–µ—Ä–≥–æ–æ–±–º–µ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –Ω–∞ –ê–≤–∏—Ç–æ. –ë–µ–∑ —ç—Ç–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑ –º–æ–∂–µ—Ç –Ω–µ —Å–±—ã—Ç—å—Å—è –∏–ª–∏ –ø–æ–π—Ç–∏ —Å–æ–≤—Å–µ–º –∏–Ω–∞—á–µ.
"""

PRIVATE_MESSAGE = """
–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —É—Å–ª—É–≥—É! –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–∞—Å–∫–ª–∞–¥ –∏–ª–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–∫—É: @zamira_esoteric.
"""

CONTACT_TEXT = """
@zamira_esoteric
"""

# –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def clean_text(text: str) -> str:
    try:
        return "".join(c for c in text if c.isprintable() or c in "\n\r\t ")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞: {e}")
        return text

def validate_date(date_text: str) -> bool:
    if not re.match(r"^\d{2}\.\d{2}\.\d{4}$", date_text):
        return False
    try:
        date = datetime.strptime(date_text, "%d.%m.%Y")
        if date.year < 1900 or date > datetime.now():
            return False
        return True
    except ValueError:
        return False

async def retry_operation(coro, max_retries=CONFIG["MAX_RETRIES"], delay=CONFIG["RETRY_DELAY"]):
    for attempt in range(max_retries):
        try:
            return await coro()
        except Exception as e:
            logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
            if attempt == max_retries - 1:
                raise
            await asyncio.sleep(delay * (2 ** attempt))

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ OpenAI
semaphore = asyncio.Semaphore(CONFIG["OPENAI_MAX_CONCURRENT"])

async def ask_gpt(prompt: str) -> str:
    """–ó–∞–ø—Ä–æ—Å –∫ OpenAI —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫."""
    async with semaphore:
        async def gpt_call():
            client = openai.AsyncOpenAI(api_key=openai.api_key)
            response = await client.chat.completions.create(
                model="gpt-3.5-turbo",  # –ó–∞–º–µ–Ω–∏ –Ω–∞ "gpt-4o", –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
                messages=[{"role": "user", "content": prompt}],
                temperature=0.85,
                max_tokens=CONFIG["OPENAI_MAX_TOKENS"],
            )
            return response.choices[0].message.content.strip()
        
        try:
            return await retry_operation(gpt_call)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ OpenAI: {e}")
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric."

async def send_long_message(chat_id: int, message: str, bot):
    parts = [message[i:i + CONFIG["MAX_MESSAGE_LENGTH"]] for i in range(0, len(message), CONFIG["MAX_MESSAGE_LENGTH"])]
    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è—é {len(parts)} —á–∞—Å—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
    
    for part in parts:
        if not part.strip():
            continue
        async def send_part():
            await bot.send_message(chat_id=chat_id, text=part)
            await asyncio.sleep(1)
        
        try:
            await retry_operation(send_part)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await bot.send_message(chat_id=chat_id, text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –°–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric.")

async def delayed_response_job(context: ContextTypes.DEFAULT_TYPE):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞."""
    chat_id, result, bot = context.job.data
    logger.info(f"–í—ã–ø–æ–ª–Ω—è—é –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É –¥–ª—è {chat_id}")
    try:
        cleaned_result = clean_text(result)
        await send_long_message(chat_id, cleaned_result, bot)
        await bot.send_message(chat_id=chat_id, text=clean_text(REVIEW_TEXT))
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ delayed_response_job: {e}")
        await bot.send_message(chat_id=chat_id, text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id in completed_users:
        await update.message.reply_text(clean_text(PRIVATE_MESSAGE))
        return
    user_data[user_id] = {"type": None, "text": ""}
    await update.message.reply_text(clean_text(WELCOME_TEXT), reply_markup=get_main_keyboard())
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—á–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ.")

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    if user_id in completed_users and query.data in ["tarot", "matrix"]:
        await query.message.reply_text(clean_text(PRIVATE_MESSAGE))
        return

    try:
        if query.data == "tarot":
            user_data[user_id] = {"type": "tarot", "text": ""}
            await query.message.reply_text(clean_text(INSTRUCTION_TAROT), reply_markup=get_confirm_keyboard(tarot=True))
        elif query.data == "matrix":
            user_data[user_id] = {"type": "matrix", "text": ""}
            await query.message.reply_text(clean_text(INSTRUCTION_MATRIX), reply_markup=get_confirm_keyboard())
        elif query.data == "contact":
            await query.message.reply_text(clean_text(CONTACT_TEXT))
        elif query.data == "confirm":
            data = user_data.get(user_id, {})
            if not data.get("type") or not data.get("text", "").strip():
                await query.message.reply_text(clean_text("–í—ã –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏."))
                return
            if len(data["text"]) < CONFIG["MIN_TEXT_LENGTH_TAROT"] and data["type"] == "tarot":
                await query.message.reply_text(clean_text("–¢–µ–∫—Å—Ç –¥–ª—è –¢–∞—Ä–æ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ–ª—å—à–µ."))
                return
            if len(data["text"]) < CONFIG["MIN_TEXT_LENGTH_MATRIX"] and data["type"] == "matrix":
                await query.message.reply_text(clean_text("–¢–µ–∫—Å—Ç –¥–ª—è –º–∞—Ç—Ä–∏—Ü—ã —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ–ª—å—à–µ."))
                return

            date_match = re.search(r"\b\d{2}\.\d{2}\.\d{4}\b", data["text"])
            if not date_match or not validate_date(date_match.group()):
                await query.message.reply_text(clean_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏–ª–∏ –¥–∞—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì."))
                return

            await query.message.reply_text(clean_text(RESPONSE_WAIT))
            prompt = (
                PROMPT_TAROT.format(input_text=data["text"]) if data["type"] == "tarot"
                else PROMPT_MATRIX.format(input_text=data["text"])
            )
            result = await ask_gpt(prompt)
            if not context.job_queue:
                logger.error("JobQueue –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
                await query.message.reply_text("–û—à–∏–±–∫–∞ –±–æ—Ç–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric.")
                return
            context.job_queue.run_once(delayed_response_job, CONFIG["DELAY_SECONDS"], data=(query.message.chat.id, result, context.bot))
            completed_users.add(user_id)
            del user_data[user_id]
            logger.info(f"–ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_callback: {e}")
        await query.message.reply_text("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message and update.message.text:
        user_id = update.message.from_user.id
        if user_id in completed_users:
            await update.message.reply_text(clean_text(PRIVATE_MESSAGE))
            return
        if user_id in user_data:
            cleaned_text = clean_text(update.message.text)
            user_data[user_id]["text"] += "\n" + cleaned_text
            logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {cleaned_text}")

async def ignore_media(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(clean_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç."))

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_main_keyboard():
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("–†–∞—Å–∫–ª–∞–¥ –¢–∞—Ä–æ üÉè", callback_data="tarot")],
            [InlineKeyboardButton("–ú–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã üåü", callback_data="matrix")],
            [InlineKeyboardButton("–°–≤—è–∑—å —Å–æ –º–Ω–æ–π üì©", callback_data="contact")],
        ]
    )

def get_confirm_keyboard(tarot=False):
    button_text = "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é" if tarot else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    return InlineKeyboardMarkup([[InlineKeyboardButton(button_text, callback_data="confirm")]])

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    try:
        app = ApplicationBuilder().token(BOT_TOKEN).build()
        app.add_handler(CommandHandler("start", start))
        app.add_handler(CallbackQueryHandler(handle_callback))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        app.add_handler(MessageHandler(~filters.TEXT & ~filters.COMMAND, ignore_media))
        logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        app.run_polling()
    except Exception as e:
        logger.critical(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        raise