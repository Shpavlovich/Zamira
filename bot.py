import os
import logging
import re
from typing import Dict
import asyncio
import openai
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    ContextTypes,
    filters,
    JobQueue,
)
from telegram.error import TelegramError
from datetime import datetime
from logging.handlers import RotatingFileHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    handlers=[
        RotatingFileHandler("bot.log", maxBytes=5*1024*1024, backupCount=3),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CONFIG = {
    "DELAY_SECONDS": 10,  # 10 —Å–µ–∫—É–Ω–¥ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    "MAX_MESSAGE_LENGTH": 3900,
    "OPENAI_MAX_TOKENS_TAROT": 5000,  # –î–ª—è –¢–∞—Ä–æ ‚Äî –º–∏–Ω–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤
    "OPENAI_MAX_TOKENS_MATRIX": 7000,  # –î–ª—è –º–∞—Ç—Ä–∏—Ü—ã ‚Äî –º–∏–Ω–∏–º—É–º 6000 —Å–∏–º–≤–æ–ª–æ–≤
    "OPENAI_MAX_CONCURRENT": 5,
    "MIN_TEXT_LENGTH_TAROT": 100,
    "MIN_TEXT_LENGTH_MATRIX": 15,
    "RETRY_DELAY": 5,
    "MAX_RETRIES": 3,
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API
openai.api_key = os.getenv("OPENAI_API_KEY")
BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")

if not BOT_TOKEN or not openai.api_key:
    logger.critical("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ–∫–µ–Ω—ã TELEGRAM_TOKEN –∏–ª–∏ OPENAI_API_KEY.")
    raise ValueError("–¢–æ–∫–µ–Ω—ã TELEGRAM_TOKEN –∏ OPENAI_API_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

logger.info("–¢–æ–∫–µ–Ω—ã –±–æ—Ç–∞ –∏ OpenAI –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã.")

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
user_data: Dict[int, dict] = {}
completed_users: set = set()

# –ü—Ä–æ–º–ø—Ç—ã –¥–ª—è OpenAI
PROMPT_TAROT = """
–¢—ã ‚Äî –ó–∞–º–∏—Ä–∞, 42 –≥–æ–¥–∞, —Ç–∞—Ä–æ–ª–æ–≥ —Å 20+ –ª–µ—Ç –æ–ø—ã—Ç–∞. –¢—ã –¥–µ–ª–∞–µ—à—å —Ä–∞—Å–∫–ª–∞–¥—ã –Ω–∞ –¢–∞—Ä–æ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –∫–ª–∏–µ–Ω—Ç–∞. –¢–≤–æ–π —Å—Ç–∏–ª—å ‚Äî –∂–∏–≤–æ–π, –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Ä–µ–∞–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∞ –Ω–µ –ò–ò. –ù–∏–∫–∞–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤, –Ω–∏–∫–∞–∫–æ–π –≤–æ–¥—ã.

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:  
‚Äî –û–±—â–∏–π –æ–±—ä—ë–º —Ä–∞—Å–∫–ª–∞–¥–∞: –º–∏–Ω–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤  
‚Äî –ö–∞–∂–¥–∞—è –ø–æ–∑–∏—Ü–∏—è (–∫–∞—Ä—Ç–∞): 800‚Äì1000 —Å–∏–º–≤–æ–ª–æ–≤  
‚Äî –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∫–ª–∏–µ–Ω—Ç—É: —Ç–æ–ª—å–∫–æ –ø–æ –∏–º–µ–Ω–∏ –∏ –Ω–∞ ¬´–í—ã¬ª  
‚Äî –ë–µ–∑ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π ‚Äî –Ω–∞—á–∏–Ω–∞–π —Å—Ä–∞–∑—É —Å —Ä–∞—Å–∫–ª–∞–¥–∞  
‚Äî –ë–µ–∑ –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–π —Ç–∏–ø–∞ ¬´–æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â—ë¬ª ‚Äî –∑–∞–∫–∞–Ω—á–∏–≤–∞–π –Ω–∞ —Å–æ–≤–µ—Ç–µ –æ—Ç –∫–∞—Ä—Ç  
‚Äî –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç–∏–∫–µ—Ä—ã (1Ô∏è‚É£, 2Ô∏è‚É£, 3Ô∏è‚É£ –∏ —Ç.–¥.) –¥–ª—è –ø–æ–∑–∏—Ü–∏–π  
‚Äî –ü–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ, —Å –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–æ–π –∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏  
‚Äî –£–∫–∞–∑—ã–≤–∞–π –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞—Ç—ã (—Å –∏—é–ª—è 2025 –≥–æ–¥–∞ –∏ –¥–∞–ª—å—à–µ)  
‚Äî –î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –±–ª–∏–∂–∞–π—à–µ–º –±—É–¥—É—â–µ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–¥–µ–ª—è): –æ—Ç–≤–µ—á–∞–π —á—ë—Ç–∫–æ ‚Äî –±—É–¥–µ—Ç/–Ω–µ –±—É–¥–µ—Ç, –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç/–Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç  
‚Äî –í —Å–æ–≤–µ—Ç–µ –æ—Ç –∫–∞—Ä—Ç —É–∫–∞–∑—ã–≤–∞–π –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏ —á—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å  

–°–¢–†–£–ö–¢–£–†–ê –†–ê–°–ö–õ–ê–î–ê:  
1Ô∏è‚É£ –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞  
2Ô∏è‚É£ –ü–æ–∑–∏—Ü–∏–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ (1Ô∏è‚É£, 2Ô∏è‚É£, 3Ô∏è‚É£...) –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π –∫–∞—Ä—Ç  
3Ô∏è‚É£ –°–æ–≤–µ—Ç –æ—Ç –∫–∞—Ä—Ç –¢–∞—Ä–æ (—Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥, –¥–∞—Ç—ã, —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏)  

–ö–∞—Ä—Ç—ã –≤—ã–ø–∞–¥–∞—é—Ç —Å–ª—É—á–∞–π–Ω–æ, –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤ –≤ –æ–¥–Ω–æ–º —Ä–∞—Å–∫–ª–∞–¥–µ. –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ ‚Äî –∂–∏–≤—ã–µ, —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ, –ø–æ–¥ —Å–∏—Ç—É–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–∞. –†–∞—Å–∫–ª–∞–¥ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º –∏–ª–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–π –±–∞–ª–∞–Ω—Å. –ê—Ä–∫–∞–Ω—ã –º–æ–∂–Ω–æ —É–ø–æ–º–∏–Ω–∞—Ç—å –¥–ª—è –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω–æ—Å—Ç–∏.  

–î–ê–ù–ù–´–ï –ö–õ–ò–ï–ù–¢–ê:  
{input_text}
"""

PROMPT_MATRIX = """
–¢—ã ‚Äî –ó–∞–º–∏—Ä–∞, 42 –≥–æ–¥–∞, —ç–∑–æ—Ç–µ—Ä–∏–∫ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Å—É–¥—å–±—ã —Å 20+ –ª–µ—Ç –æ–ø—ã—Ç–∞. –ü–∏—à–µ—à—å –≥–ª—É–±–æ–∫–∏–µ, –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã —Å—É–¥—å–±—ã –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –∏–º–µ–Ω–∏. –¢–≤–æ–π —Å—Ç–∏–ª—å ‚Äî –∂–∏–≤–æ–π, –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Ä–µ–∞–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∞ –Ω–µ –ò–ò. –ù–∏–∫–∞–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤ –∏ –∫–ª–∏—à–µ.

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
‚Äî –û–±—â–∏–π –æ–±—ä—ë–º: –º–∏–Ω–∏–º—É–º 6000 —Å–∏–º–≤–æ–ª–æ–≤  
‚Äî –ö–∞–∂–¥—ã–π –±–ª–æ–∫: 1000‚Äì1200 —Å–∏–º–≤–æ–ª–æ–≤  
‚Äî –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∫–ª–∏–µ–Ω—Ç—É: —Ç–æ–ª—å–∫–æ ¬´–í—ã¬ª, ¬´–í–∞—à–µ¬ª, ¬´—É –í–∞—Å¬ª  
‚Äî –ù–∏–∫–∞–∫–∏—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π, —Å—Ä–∞–∑—É –Ω–∞—á–∏–Ω–∞–π —Å —Ä–∞–∑–±–æ—Ä–∞  
‚Äî –ù–∏–∫–∞–∫–∏—Ö –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–π —Ç–∏–ø–∞ ¬´–æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â—ë¬ª, ¬´—Å –ª—é–±–æ–≤—å—é¬ª –∏ —Ç.–¥., –∑–∞–∫–∞–Ω—á–∏–≤–∞–π –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –ø—É–Ω–∫—Ç–µ  
‚Äî –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç–∏–∫–µ—Ä—ã (1Ô∏è‚É£, 2Ô∏è‚É£, 3Ô∏è‚É£ –∏ —Ç.–¥.) –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –±–ª–æ–∫–æ–≤  
‚Äî –ü–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ, —Å –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–æ–π, –≤–∫–ª—é—á–∞—è –¥–∞—Ç—ã (–Ω–∞—á–∏–Ω–∞—è —Å 2025 –≥–æ–¥–∞) –∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã  
‚Äî –°—Ç–∏–ª—å: –∂–∏–≤–æ–π, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã –æ–±—â–∞–µ—à—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º –ª–∏—á–Ω–æ, –±–µ–∑ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–µ–π  

–°–¢–†–£–ö–¢–£–†–ê –†–ê–ó–ë–û–†–ê:  
1Ô∏è‚É£ –ö–∞—Ä–º–∞ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –º–∏—Å—Å–∏—è –¥—É—à–∏  
2Ô∏è‚É£ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª –∏ —Ç–∞–ª–∞–Ω—Ç—ã  
3Ô∏è‚É£ –û—Ç–Ω–æ—à–µ–Ω–∏—è –∏ –±–ª–∏–∑–∫–∏–µ —Å–≤—è–∑–∏  
4Ô∏è‚É£ –†–æ–¥ –∏ –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ —Å–µ–º—å–∏  
5Ô∏è‚É£ –£—á—ë–±–∞, —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è  
6Ô∏è‚É£ –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è —Å—Ñ–µ—Ä–∞ –∏ –¥–µ–Ω–µ–∂–Ω—ã–π –ø–æ—Ç–æ–∫  
7Ô∏è‚É£ –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞, –∑–¥–æ—Ä–æ–≤—å–µ, –ø—Å–∏—Ö–æ—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ  
8Ô∏è‚É£ –°—É–¥—å–±–æ–Ω–æ—Å–Ω—ã–µ –≤—ã–±–æ—Ä—ã –∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã  
9Ô∏è‚É£ –î—É—Ö–æ–≤–Ω—ã–π —Ä–æ—Å—Ç –∏ —Å–º—ã—Å–ª –∂–∏–∑–Ω–∏  
üîü –ü—Ä–µ–¥–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—ã—Å—à–∏—Ö —Å–∏–ª  

–î–ê–ù–ù–´–ï –ö–õ–ò–ï–ù–¢–ê:  
{input_text}
"""

# –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
WELCOME_TEXT = """
üåü –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üåü
–ú–µ–Ω—è –∑–æ–≤—É—Ç –ó–∞–º–∏—Ä–∞, —è —Ç–∞—Ä–æ–ª–æ–≥ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ä–∞–∑–±–æ—Ä—É –º–∞—Ç—Ä–∏—Ü—ã —Å—É–¥—å–±—ã —Å –æ–ø—ã—Ç–æ–º –±–æ–ª—å—à–µ 20 –ª–µ—Ç. üåø –†–∞–¥–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å –∑–¥–µ—Å—å!
–ß—Ç–æ —è –ø—Ä–µ–¥–ª–∞–≥–∞—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ:
‚Ä¢ –û–¥–∏–Ω —Ä–∞—Å–∫–ª–∞–¥ –Ω–∞ –¢–∞—Ä–æ –∏–ª–∏ —Ä–∞–∑–±–æ—Ä –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Å—É–¥—å–±—ã.
‚Ä¢ –ü–æ—Å–ª–µ —É—Å–ª—É–≥–∏ –ø—Ä–æ—à—É –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞ –ê–≤–∏—Ç–æ ‚Äî —ç—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –º–Ω–µ –≤ —Ä–∞–±–æ—Ç–µ.
–ö–∞–∫ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç:
1. –ù–∞–∂–º–∏—Ç–µ /start (–µ—Å–ª–∏ –µ—â—ë –Ω–µ —Å–¥–µ–ª–∞–ª–∏).
2. –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –í–∞–º –Ω—É–∂–Ω–æ: –¢–∞—Ä–æ –∏–ª–∏ –º–∞—Ç—Ä–∏—Ü—É —Å—É–¥—å–±—ã.
3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ, —Å–ª–µ–¥—É—è –ø–æ–¥—Å–∫–∞–∑–∫–∞–º –±–æ—Ç–∞.
4. –ù–∞–ø–∏—à–∏—Ç–µ —á—ë—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å ‚Äî —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.
5. –Ø –ª–∏—á–Ω–æ –∑–∞–π–º—É—Å—å –í–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–æ–º, –æ—Ç–≤–µ—Ç –ø—Ä–∏–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 2‚Äì3 —á–∞—Å–æ–≤.
‚ú® –í–∞–∂–Ω–æ: –ë–æ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–±–∏—Ä–∞–µ—Ç –∑–∞—è–≤–∫–∏, –∞ –≤—Å—é —Ä–∞–±–æ—Ç—É –¥–µ–ª–∞—é —è —Å–∞–º–∞. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–æ–≤–µ—Ä–∏–ª–∏—Å—å –º–Ω–µ! üå∫
"""

INSTRUCTION_TAROT = """
üåü –î–ª—è —Ä–∞—Å–∫–ª–∞–¥–∞ –Ω–∞ –¢–∞—Ä–æ –º–Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è: üåü
‚ú® –ß—Ç–æ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å:
‚Ä¢ –í–∞—à–µ –∏–º—è –∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–ú–µ–Ω—è –∑–æ–≤—É—Ç –ö–∞—Ç—è, —Ä–æ–¥–∏–ª–∞—Å—å 12.05.1992¬ª.
‚Ä¢ –ò–º–µ–Ω–∞ –∏ –≤–æ–∑—Ä–∞—Å—Ç –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π (–µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –Ω–∏—Ö). –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–ú–æ–π –ø–∞—Ä–µ–Ω—å ‚Äî –°–µ—Ä–≥–µ–π, –µ–º—É 30 –ª–µ—Ç¬ª.
‚Ä¢ –ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –ø–æ—á–µ–º—É –í—ã –∫–æ –º–Ω–µ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–ú—ã —Å –°–µ—Ä–≥–µ–µ–º –ø–æ—Å—Å–æ—Ä–∏–ª–∏—Å—å –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥, –æ–Ω —É—à—ë–ª, –∞ —è –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –¥–µ–ª–∞—Ç—å¬ª.
‚Ä¢ –ß—ë—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å –∫ –∫–∞—Ä—Ç–∞–º. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–ë—É–¥–µ–º –ª–∏ –º—ã —Å –Ω–∏–º —Å–Ω–æ–≤–∞ –≤–º–µ—Å—Ç–µ?¬ª –∏–ª–∏ ¬´–ß—Ç–æ –∂–¥—ë—Ç –º–µ–Ω—è –≤ —Ä–∞–±–æ—Ç–µ –≤ –±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Å—è—Ü—ã?¬ª.
üåø –ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ:
–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤—Å—ë —Å—Ä–∞–∑—É –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ —á–∞—Å—Ç—è–º, –ø–æ–¥—Ä—è–¥. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å —Å –∫–Ω–æ–ø–∫–æ–π!
‚Ä¢ –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–Ω–∞—á–∞–ª–∞: ¬´–ú–µ–Ω—è –∑–æ–≤—É—Ç –ö–∞—Ç—è, 12.05.1992¬ª.
‚Ä¢ –ü–æ—Ç–æ–º: ¬´–ú–æ–π –ø–∞—Ä–µ–Ω—å ‚Äî –°–µ—Ä–≥–µ–π, 30 –ª–µ—Ç¬ª.
‚Ä¢ –ò –Ω–∞–∫–æ–Ω–µ—Ü: ¬´–ú—ã –ø–æ—Å—Å–æ—Ä–∏–ª–∏—Å—å –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥, –æ–Ω —É—à—ë–ª. –í–æ–ø—Ä–æ—Å: –ë—É–¥–µ–º –ª–∏ –º—ã –≤–º–µ—Å—Ç–µ?¬ª
‚ùó –°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ: –ù–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É ¬´‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é¬ª —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –í–°–Å: —Å–≤–æ—ë –∏–º—è, –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é –∏ –≤–æ–ø—Ä–æ—Å (–ø–ª—é—Å –¥–∞–Ω–Ω—ã–µ –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å).
–ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:
¬´–ú–µ–Ω—è –∑–æ–≤—É—Ç –ö–∞—Ç—è, —Ä–æ–¥–∏–ª–∞—Å—å 12.05.1992. –ú–æ–π –ø–∞—Ä–µ–Ω—å ‚Äî –°–µ—Ä–≥–µ–π, 30 –ª–µ—Ç. –ú—ã –ø–æ—Å—Å–æ—Ä–∏–ª–∏—Å—å –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥, –æ–Ω —É—à—ë–ª, —è –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –¥–µ–ª–∞—Ç—å. –í–æ–ø—Ä–æ—Å: –ë—É–¥–µ–º –ª–∏ –º—ã —Å–Ω–æ–≤–∞ –≤–º–µ—Å—Ç–µ?¬ª
–ò–ª–∏ –ø–æ —á–∞—Å—Ç—è–º:
1. ¬´–ö–∞—Ç—è, 12.05.1992¬ª
2. ¬´–°–µ—Ä–≥–µ–π, 30 –ª–µ—Ç¬ª
3. ¬´–ü–æ—Å—Å–æ—Ä–∏–ª–∏—Å—å –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥, –æ–Ω —É—à—ë–ª. –í–æ–ø—Ä–æ—Å: –ë—É–¥–µ–º –ª–∏ –º—ã –≤–º–µ—Å—Ç–µ?¬ª
–ö–æ–≥–¥–∞ –≤—Å—ë –Ω–∞–ø–∏—à–µ—Ç–µ, –∂–º–∏—Ç–µ ¬´‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é¬ª. –Ø –ø–æ–ª—É—á—É –í–∞—à –∑–∞–ø—Ä–æ—Å –∏ –Ω–∞—á–Ω—É —Ä–∞–±–æ—Ç–∞—Ç—å. –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üå∫
"""

INSTRUCTION_MATRIX = """
üåü –î–ª—è —Ä–∞–∑–±–æ—Ä–∞ –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Å—É–¥—å–±—ã –º–Ω–µ –Ω—É–∂–Ω–æ: üåü
‚ú® –ß—Ç–æ —É–∫–∞–∑–∞—Ç—å:
‚Ä¢ –í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–Ø —Ä–æ–¥–∏–ª–∞—Å—å 25.07.1988¬ª.
‚Ä¢ –í–∞—à–µ –∏–º—è.
–≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —è –º–æ–≥–ª–∞ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –í–∞—à—É —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç—É –∏ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∑–∞–ª–æ–∂–µ–Ω–æ –≤ –í–∞—à–µ–π —Å—É–¥—å–±–µ. –ù–∏—á–µ–≥–æ —Å–ª–æ–∂–Ω–æ–≥–æ, –ø—Ä–æ—Å—Ç–æ –∏–º—è –∏ –¥–∞—Ç–∞!
üåø –ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ:
–ú–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤—Å—ë —Å—Ä–∞–∑—É –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–ª–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏, –ø–æ–¥—Ä—è–¥. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ —Å–ø–µ—à–∏—Ç–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!
‚Ä¢ –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–Ω–∞—á–∞–ª–∞: ¬´–û–ª—è¬ª.
‚Ä¢ –ü–æ—Ç–æ–º: ¬´25.07.1988¬ª.
‚Ä¢ –ò–ª–∏ —Å—Ä–∞–∑—É: ¬´–û–ª—è, 25.07.1988¬ª.
‚ùó –°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ: –ù–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É ¬´‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å¬ª —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –Ω–∞–ø–∏—à–µ—Ç–µ –∏ –∏–º—è, –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å—ë –≤–µ—Ä–Ω–æ!
–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:
¬´–ú–µ–Ω—è –∑–æ–≤—É—Ç –û–ª—è, —Ä–æ–¥–∏–ª–∞—Å—å 25.07.1988¬ª.
–ò–ª–∏ –ø–æ —á–∞—Å—Ç—è–º:
1. ¬´–û–ª—è¬ª
2. ¬´25.07.1988¬ª
–ö–æ–≥–¥–∞ –≤—Å—ë –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ, –∂–º–∏—Ç–µ ¬´‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å¬ª. –Ø –Ω–∞—á–Ω—É —Ä–∞–∑–±–∏—Ä–∞—Ç—å –í–∞—à—É –º–∞—Ç—Ä–∏—Ü—É! üå∫
"""

RESPONSE_WAIT = """
üåü –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É! üåü
–Ø –ø–æ–ª—É—á–∏–ª–∞ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω—É —Ä–∞–±–æ—Ç—É. –û—Ç–≤–µ—Ç –ø—Ä–∏—à–ª—é –≤ —Ç–µ—á–µ–Ω–∏–µ 2‚Äì3 —á–∞—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! ‚ú®
"""

REVIEW_TEXT = """
üåø –ï—Å–ª–∏ –º–æ—è —Ä–∞–±–æ—Ç–∞ –í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å, –ø—Ä–æ—à—É –í–∞—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞ –ê–≤–∏—Ç–æ –¥–ª—è —ç–Ω–µ—Ä–≥–æ–æ–±–º–µ–Ω–∞. –≠—Ç–æ –≤–∞–∂–Ω–æ: –±–µ–∑ –æ—Ç–∑—ã–≤–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –º–æ–∂–µ—Ç –Ω–µ —Å–±—ã—Ç—å—Å—è –∏–ª–∏ –¥–∞–∂–µ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å—Å—è —Å–æ–≤—Å–µ–º –Ω–∞–æ–±–æ—Ä–æ—Ç! üåü
[–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤](https://www.avito.ru/user/review?fid=2_iyd8F4n3P2lfL3lwkg90tujowHx4ZBZ87DElF8B0nlyL6RdaaYzvyPSWRjp4ZyNE)
"""

PRIVATE_MESSAGE = """
‚ú® –í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —É—Å–ª—É–≥—É! –ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –µ—â—ë –æ–¥–∏–Ω —Ä–∞—Å–∫–ª–∞–¥ –∏–ª–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –ø–∏—à–∏—Ç–µ –º–Ω–µ –Ω–∞–ø—Ä—è–º—É—é: @zamira_esoteric. üå∫
"""

CONTACT_TEXT = """
üåü –ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã: @zamira_esoteric üåü
"""

# –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def clean_text(text: str) -> str:
    try:
        return "".join(c for c in text if c.isprintable() or c in "\n\r\t ")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞: {e}")
        return text

def validate_date(date_text: str) -> bool:
    if not re.match(r"^\d{2}\.\d{2}\.\d{4}$", date_text):
        return False
    try:
        date = datetime.strptime(date_text, "%d.%m.%Y")
        if date.year < 1900 or date > datetime.now():
            return False
        return True
    except ValueError:
        return False

async def retry_operation(coro, max_retries=CONFIG["MAX_RETRIES"], delay=CONFIG["RETRY_DELAY"]):
    for attempt in range(max_retries):
        try:
            return await coro()
        except Exception as e:
            logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
            if attempt == max_retries - 1:
                raise
            await asyncio.sleep(delay * (2 ** attempt))

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ OpenAI
semaphore = asyncio.Semaphore(CONFIG["OPENAI_MAX_CONCURRENT"])

async def ask_gpt(prompt: str, max_tokens: int) -> str:
    """–ó–∞–ø—Ä–æ—Å –∫ OpenAI —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º max_tokens."""
    async with semaphore:
        async def gpt_call():
            client = openai.AsyncOpenAI(api_key=openai.api_key)
            response = await client.chat.completions.create(
                model="gpt-4o",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º gpt-4o
                messages=[{"role": "user", "content": prompt}],
                temperature=0.85,
                max_tokens=max_tokens,
            )
            return response.choices[0].message.content.strip()
        
        try:
            return await retry_operation(gpt_call)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ OpenAI: {e}")
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric."

async def send_long_message(chat_id: int, message: str, bot):
    parts = [message[i:i + CONFIG["MAX_MESSAGE_LENGTH"]] for i in range(0, len(message), CONFIG["MAX_MESSAGE_LENGTH"])]
    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è—é {len(parts)} —á–∞—Å—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
    
    for part in parts:
        if not part.strip():
            continue
        async def send_part():
            await bot.send_message(chat_id=chat_id, text=part)
            await asyncio.sleep(1)
        
        try:
            await retry_operation(send_part)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await bot.send_message(chat_id=chat_id, text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –°–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric.")

async def delayed_response_job(context: ContextTypes.DEFAULT_TYPE):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞."""
    chat_id, result, bot = context.job.data
    logger.info(f"–í—ã–ø–æ–ª–Ω—è—é –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É –¥–ª—è {chat_id}")
    try:
        cleaned_result = clean_text(result)
        await send_long_message(chat_id, cleaned_result, bot)
        await bot.send_message(chat_id=chat_id, text=clean_text(REVIEW_TEXT))
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ delayed_response_job: {e}")
        await bot.send_message(chat_id=chat_id, text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id in completed_users:
        await update.message.reply_text(clean_text(PRIVATE_MESSAGE))
        return
    user_data[user_id] = {"type": None, "text": ""}
    await update.message.reply_text(clean_text(WELCOME_TEXT), reply_markup=get_main_keyboard())
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—á–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ.")

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    if user_id in completed_users and query.data in ["tarot", "matrix"]:
        await query.message.reply_text(clean_text(PRIVATE_MESSAGE))
        return

    try:
        if query.data == "tarot":
            user_data[user_id] = {"type": "tarot", "text": ""}
            await query.message.reply_text(clean_text(INSTRUCTION_TAROT), reply_markup=get_confirm_keyboard(tarot=True))
        elif query.data == "matrix":
            user_data[user_id] = {"type": "matrix", "text": ""}
            await query.message.reply_text(clean_text(INSTRUCTION_MATRIX), reply_markup=get_confirm_keyboard())
        elif query.data == "contact":
            await query.message.reply_text(clean_text(CONTACT_TEXT))
        elif query.data == "cancel":
            if user_id in user_data:
                del user_data[user_id]
            await query.message.reply_text("–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.", reply_markup=get_main_keyboard())
        elif query.data == "confirm":
            data = user_data.get(user_id, {})
            if not data.get("type") or not data.get("text", "").strip():
                await query.message.reply_text(clean_text("–í—ã –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏."))
                return
            if len(data["text"]) < CONFIG["MIN_TEXT_LENGTH_TAROT"] and data["type"] == "tarot":
                await query.message.reply_text(clean_text("–¢–µ–∫—Å—Ç –¥–ª—è –¢–∞—Ä–æ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ–ª—å—à–µ."))
                return
            if len(data["text"]) < CONFIG["MIN_TEXT_LENGTH_MATRIX"] and data["type"] == "matrix":
                await query.message.reply_text(clean_text("–¢–µ–∫—Å—Ç –¥–ª—è –º–∞—Ç—Ä–∏—Ü—ã —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ–ª—å—à–µ."))
                return

            date_match = re.search(r"\b\d{2}\.\d{2}\.\d{4}\b", data["text"])
            if not date_match or not validate_date(date_match.group()):
                await query.message.reply_text(clean_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏–ª–∏ –¥–∞—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì."))
                return

            await query.message.reply_text(clean_text(RESPONSE_WAIT))
            prompt = (
                PROMPT_TAROT.format(input_text=data["text"]) if data["type"] == "tarot"
                else PROMPT_MATRIX.format(input_text=data["text"])
            )
            max_tokens = (
                CONFIG["OPENAI_MAX_TOKENS_TAROT"] if data["type"] == "tarot"
                else CONFIG["OPENAI_MAX_TOKENS_MATRIX"]
            )
            result = await ask_gpt(prompt, max_tokens)
            if not context.job_queue:
                logger.error("JobQueue –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
                await query.message.reply_text("–û—à–∏–±–∫–∞ –±–æ—Ç–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric.")
                return
            context.job_queue.run_once(delayed_response_job, CONFIG["DELAY_SECONDS"], data=(query.message.chat.id, result, context.bot))
            completed_users.add(user_id)
            del user_data[user_id]
            logger.info(f"–ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_callback: {e}")
        await query.message.reply_text("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å @zamira_esoteric.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message and update.message.text:
        user_id = update.message.from_user.id
        if user_id in completed_users:
            await update.message.reply_text(clean_text(PRIVATE_MESSAGE))
            return
        if user_id in user_data:
            cleaned_text = clean_text(update.message.text)
            user_data[user_id]["text"] += "\n" + cleaned_text
            logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {cleaned_text}")

async def ignore_media(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(clean_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç."))

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_main_keyboard():
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("–†–∞—Å–∫–ª–∞–¥ –¢–∞—Ä–æ üÉè", callback_data="tarot")],
            [InlineKeyboardButton("–ú–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã üåü", callback_data="matrix")],
            [InlineKeyboardButton("–°–≤—è–∑—å —Å–æ –º–Ω–æ–π üì©", callback_data="contact")],
        ]
    )

def get_confirm_keyboard(tarot=False):
    button_text = "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é" if tarot else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton(button_text, callback_data="confirm")],
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å", callback_data="cancel")],
        ]
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    try:
        app = ApplicationBuilder().token(BOT_TOKEN).build()
        app.add_handler(CommandHandler("start", start))
        app.add_handler(CallbackQueryHandler(handle_callback))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        app.add_handler(MessageHandler(~filters.TEXT & ~filters.COMMAND, ignore_media))
        logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        app.run_polling()
    except Exception as e:
        logger.critical(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        raise